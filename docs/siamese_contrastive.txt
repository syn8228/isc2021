# SiameseNetwork trained by Contrastive Loss

Path to 3 images datasets and facebook resnet50 checkpoint are global variables in code siamese.py

# Install requirements:
pip3 install --user -r isc2021/requirements.txt
pip3 install efficientnet_pytorch
pip3 install pytorch_pretrained_vit
pip3 install timm
pip3 install augly
pip3 install python-magic-bin==0.4.14

#Training 
Example:
python3	isc2021/baselines/Siamese.py 
--train
--query_list isc2021/list_files/subset_1_queries
--gt_list isc2021/list_files/subset_1_ground_truth.csv 
--train_list isc2021/list_files/train 
--db_list isc2021/list_files/subset_1_references 
--epoch 2 
--model visformer 
--batch_size 5 
--len 2000 
--lr 0.00003 
--weight_decay 0.00005 
-- margin 15.0
--i0 0 
--i1 400
# Start training
--start
# Continue training
--checkpoint Siamese_Epoch_20.pth

Options:
--transpose: insert one of the 7 PIL transpose, default:-1
--train: train network or use network for feature extraction
--device: pytorch device, default: cuda:0
--batch_size: Dataloader batch size
--num_workers: number of Dataloader workers
--start: start training without loading checkpoint
--checkpoint: continue training with saved checkpoint

Model Options:
--model: select pretrained model
--lr: learning rate
--weight_decay: l2 regularization weight
-- margin: margin in loss function

Model list: 
zoo_resnet50: 	use resnet50 from pytorch
multigrain_resnet50: 	use resnet50 from facebook
vgg
resnet152
efficientnetb1
efficientnetb7
visformer: 	visual transformer vit_large_patch16_384

Dataset Options:
--query_list: path to file with name of query images 
--db_list: path to file with name of reference images
--gt_list: path to file with list of ground truth

--train_list: path to file with name of images in training dataset
--len: lenth of validation set
--epoch: epoch of training, each epoch use different sequence of argumentations
--i0and --i1: choose part of training list i0 is start index, i1 is end index

Output Options:
--net: save checkpoint to this folder  


#Feature Extraction
Example:
python3 isc2021/baselines/Siamese.py 
--query_list isc2021/list_files/subset_1_queries 
--gt_list isc2021/list_files/subset_1_ground_truth.csv 
--train_list isc2021/list_files/train 
--db_list isc2021/list_files/subset_1_references 
--model visformer 
--batch_size 32 
--checkpoint Siamese_Epoch_50.pth

Options:
--transpose: insert one of the 7 PIL transpose, should same as training
--train: train network or use network for feature extraction
--device: pytorch device, default: cuda:0
--batch_size: Dataloader batch size
--num_workers: number of Dataloader workers

Model Options:
--model: select pretrained model, should given as same as the model used for training
--net: folder where checkpoint saved, same as training 
--checkpoint: name of best saved checkpoint, given by training result

Dataset Options:
--query_list: path to file with name of query images that to be extracted
--db_list: path to file with name of reference images that to be extracted
--gt_list: path to file with list of ground truth
--train_list: path to file with name of images in training dataset

Output options:
--query_f: default="isc2021/data/query_siamese.hdf5", help="write query features to this file"
--db_f: default="isc2021/data/db_siamese.hdf5", help="write reference features to this file"
--train_f: default="isc2021/data/train_siamese.hdf5", help="write training features to this file"
--images: default="isc2021/data/images/siamese/", help="save visualized test result to this folder"


# Evaluation
Example:
python3 isc2021/scripts/compute_metrics.py 
--query_descs isc2021/data/query_siamese.hdf5 
--db_descs isc2021/data/db_siamese.hdf5 
--gt_filepath isc2021/list_files/subset_1_ground_truth.csv 
--track2 
--max_dim 2000

Options:
--query_descs: hdf5 file with extracted query features
--db_descs: hdf5 file with extracted reference features
--gt_filepath: ground trouth file
--track2: evaluation for track2 or track1
--max_dim: max. dimensionality of feature vectors


